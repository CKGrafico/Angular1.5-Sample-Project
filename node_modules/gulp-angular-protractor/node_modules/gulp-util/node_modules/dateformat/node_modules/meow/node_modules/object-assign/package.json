{
  "_args": [
    [
      "object-assign@https://registry.npmjs.org/object-assign/-/object-assign-1.0.0.tgz",
      "C:\\Projects\\Angular1_5 Sample\\node_modules\\gulp-angular-protractor\\node_modules\\gulp-util\\node_modules\\dateformat\\node_modules\\meow"
    ]
  ],
  "_from": "object-assign@1.0.0",
  "_id": "object-assign@1.0.0",
  "_inCache": true,
  "_location": "/gulp-angular-protractor/gulp-util/dateformat/meow/object-assign",
  "_phantomChildren": {},
  "_requested": {
    "name": "object-assign",
    "raw": "object-assign@https://registry.npmjs.org/object-assign/-/object-assign-1.0.0.tgz",
    "rawSpec": "https://registry.npmjs.org/object-assign/-/object-assign-1.0.0.tgz",
    "scope": null,
    "spec": "https://registry.npmjs.org/object-assign/-/object-assign-1.0.0.tgz",
    "type": "remote"
  },
  "_requiredBy": [
    "/gulp-angular-protractor/gulp-util/dateformat/meow"
  ],
  "_resolved": "https://registry.npmjs.org/object-assign/-/object-assign-1.0.0.tgz",
  "_shasum": "e65dc8766d3b47b4b8307465c8311da030b070a6",
  "_shrinkwrap": null,
  "_spec": "object-assign@https://registry.npmjs.org/object-assign/-/object-assign-1.0.0.tgz",
  "_where": "C:\\Projects\\Angular1_5 Sample\\node_modules\\gulp-angular-protractor\\node_modules\\gulp-util\\node_modules\\dateformat\\node_modules\\meow",
  "author": {
    "email": "sindresorhus@gmail.com",
    "name": "Sindre Sorhus",
    "url": "http://sindresorhus.com"
  },
  "bugs": {
    "url": "https://github.com/sindresorhus/object-assign/issues"
  },
  "dependencies": {},
  "description": "ES6 Object.assign() ponyfill",
  "devDependencies": {
    "mocha": "*"
  },
  "engines": {
    "node": ">=0.10.0"
  },
  "files": [
    "index.js"
  ],
  "homepage": "https://github.com/sindresorhus/object-assign#readme",
  "keywords": [
    "object",
    "assign",
    "extend",
    "properties",
    "es6",
    "ecmascript",
    "harmony",
    "ponyfill",
    "prollyfill",
    "polyfill",
    "shim",
    "browser"
  ],
  "license": "MIT",
  "name": "object-assign",
  "optionalDependencies": {},
  "readme": "# object-assign [![Build Status](https://travis-ci.org/sindresorhus/object-assign.svg?branch=master)](https://travis-ci.org/sindresorhus/object-assign)\n\n> ES6 [`Object.assign()`](http://www.2ality.com/2014/01/object-assign.html) ponyfill\n\n> Ponyfill: A polyfill that doesn't overwrite the native method\n\n\n## Install\n\n```sh\n$ npm install --save object-assign\n```\n\n\n## Usage\n\n```js\nvar objectAssign = require('object-assign');\n\nobjectAssign({foo: 0}, {bar: 1});\n//=> {foo: 0, bar: 1}\n\n// multiple sources\nobjectAssign({foo: 0}, {bar: 1}, {baz: 3});\n//=> {foo: 0, bar: 1, baz: 2}\n\n// ignores null and undefined sources\nobjectAssign({foo: 0}, null, {bar: 1}, undefined);\n//=> {foo: 0, bar: 1, baz: 2}\n```\n\n\n## API\n\n### objectAssign(target, source, [source, ...])\n\nAssigns enumerable own properties of `source` objects to the `target` object and returns the `target` object. Additional `source` objects will overwrite previous ones.\n\n\n## Resources\n\n- [ES6 spec - Object.assign](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-object.assign)\n\n\n## License\n\nMIT Â© [Sindre Sorhus](http://sindresorhus.com)\n",
  "readmeFilename": "readme.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/sindresorhus/object-assign.git"
  },
  "scripts": {
    "test": "mocha"
  },
  "version": "1.0.0"
}
